name: Build and Push All Builders

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  validate-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Validate conventional commits
        env:
          BASE_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
        run: |
          cd .tooling
          node validate-commits.js --base-ref "$BASE_REF"

  detect-changes:
    needs: validate-commits
    runs-on: ubuntu-latest
    outputs:
      changed-folders: ${{ steps.changes.outputs.changed-folders }}
      has-changes: ${{ steps.changes.outputs.has-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Detect changed folders
        id: changes
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          BASE_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
        run: |
          cd .tooling
          
          # Run the detection script
          changed_folders=$(node detect-changes.js detect)
          
          # Convert to JSON array for matrix and set outputs
          if [[ -n "$changed_folders" ]] && [[ "$changed_folders" != "[]" ]]; then
            echo "changed-folders=$changed_folders" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Folders to build: $changed_folders"
          else
            echo "changed-folders=[]" >> $GITHUB_OUTPUT
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No folders to build"
          fi

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.changed-folders) }}
      fail-fast: false
    
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/interledger/builders/${{ matrix.folder }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-
          labels: |
            org.opencontainers.image.description=Builder tool: ${{ matrix.folder }}
            org.opencontainers.image.vendor=Interledger Foundation

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.folder }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true

      - name: Push Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.folder }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
